P:有两个各存放在数组A和B中的n位二进制整数，考虑它们相加的问题。两个整数的和以二进制形式存放在具有(n+1)个元素的数组中。请给出这个问题的形式化描述，并写出伪代码。

输入：A[a1,a2,...,an] 与 B[b1,b2,...,bn], 其中ai,bi为{0,1}中的一个元素，A与B中的元素代表二进制整数的位。
输出：C[c1,c2,...,cn,c(n+1)]，其中ci为{0,1}中的一个元素，C为二进制整数A与B的和

ADD(A,B,n)
t <- A[n]+B[n]
C[n+1] <- t%2
if t<2
   then hl <- 0
else 
   hl <- 1
for i <- n+1 to 3
    do t <- A[i-2]+B[i－2] + hl
       if t<2
          then hl <- 0
       else 
          hl <- 1
       C[i-1] <- t%2
C[i-1] <- hl //最后的进位

将hl存在C[i-1]中，节省一个空间

ADD(A,B,n)
t <- A[n]+B[n]
C[n+1] <- t%2
if t<2
   then C[n] <- 0
else
   C[n] <- 1
for i <- n+1 to 3
    do t <- A[i-2]+B[i-2]+C[i-1]
       if t<2
          then C[i-2] <- 0
       else
          C[i-2] <- 1
       C[i-1] <- t%2


第一轮循环开始前，C[i]是正确C的位。此时i=n+1, C[n+1]已经是正确的C的位。
每一轮循环开始前，C[i]是正确的位。
循环结束后，i = 2,也就是说C[2..n]每个元素都是正确的
C[1]刚好等于进位值


--如果将n+1换成n呢
ADD(A,B,n)
t <- A[n]+B[n]
C[n+1] <- t%2
if t<2
   then C[n] <- 0
else
   C[n] <- 1
for i <- n to 2
    do t <- A[i-1]+B[i-1]+C[i]
       if t<2
          then C[i-1] <- 0
       else
          C[i-1] <- 1
       C[i] <- t%2

第一轮循环开始前，C[i+1]是正确C的位。此时i=n, C[n+1]已经是正确的C的位。
每一轮循环开始前，C[i+1..n+1]是正确的位。
循环结束后，i = 1,也就是说C[2..n]每个元素都是正确的
C[1]刚好等于进位值

--如果假定C[n+2]这个不存在的元素也是正确的，

ADD(A,B,n)
C[n+1] <- 0
for i <- n+1 to 2
    do t <- A[i-1]+B[i-1]+C[i]
       if t<2
          then C[i-1] <- 0
       else
          C[i-1] <- 1
       C[i] <- t%2
第一轮循环开始前,C[i+1]是正确的C位;
第一轮循环开始前，C[i+1..n+1]是正确的C位
循环结束后，i=1,C[2..n+1]是正确的C位
C[1]刚好等于进位值
